---
- name: Verify deployment
  hosts: all
  become: true
  gather_facts: true

  tasks:
    # Common verifications
    - name: Check if configuration was found
      ansible.builtin.assert:
        that:
          - config_file_found is defined
          - config_file_found | bool
        fail_msg: "Configuration file was not found"

    # UniFi-specific verifications
    - name: Verify UniFi deployment
      when: is_unifi_system | default(false) | bool
      block:
        - name: Check if on-boot script exists
          ansible.builtin.stat:
            path: "/data/on_boot.d/1-unifi-pathvector-setup.sh"
          register: unifi_script

        - name: Assert on-boot script was deployed
          ansible.builtin.assert:
            that:
              - unifi_script.stat.exists
              - unifi_script.stat.mode == '0755'
            fail_msg: "UniFi on-boot script not properly deployed"

        - name: Check if persistent config exists
          ansible.builtin.stat:
            path: /data/on_boot.d/pathvector.yml
          register: unifi_config

        - name: Assert persistent config was deployed
          ansible.builtin.assert:
            that:
              - unifi_config.stat.exists
            fail_msg: "UniFi persistent config not deployed"

        - name: Check if log file was created
          ansible.builtin.stat:
            path: /var/log/unifi-pathvector-setup.log
          register: unifi_log

        - name: Display UniFi verification results
          ansible.builtin.debug:
            msg:
              - "UniFi system verified"
              - "On-boot script: {{ unifi_script.stat.exists }}"
              - "Persistent config: {{ unifi_config.stat.exists }}"
              - "Log file created: {{ unifi_log.stat.exists }}"

    # Debian-specific verifications
    - name: Verify Debian deployment
      when: not (is_unifi_system | default(false) | bool)
      block:
        - name: Check if bird2 is installed
          ansible.builtin.command: which bird
          register: bird_check
          changed_when: false
          failed_when: false

        - name: Check if pathvector is installed
          ansible.builtin.command: which pathvector
          register: pathvector_check
          changed_when: false
          failed_when: false

        - name: Assert packages are installed
          ansible.builtin.assert:
            that:
              - bird_check.rc == 0
              - pathvector_check.rc == 0
            fail_msg: "Required packages not installed on Debian system"

        - name: Check if configuration exists
          ansible.builtin.stat:
            path: /etc/pathvector.yml
          register: debian_config

        - name: Assert configuration was deployed
          ansible.builtin.assert:
            that:
              - debian_config.stat.exists
            fail_msg: "Configuration not deployed to /etc/pathvector.yml"

        - name: Check Bird service status
          ansible.builtin.systemd:
            name: bird
            state: started
          register: bird_service
          failed_when: false

        - name: Display Debian verification results
          ansible.builtin.debug:
            msg:
              - "Debian system verified"
              - "Bird installed: {{ bird_check.rc == 0 }}"
              - "Pathvector installed: {{ pathvector_check.rc == 0 }}"
              - "Config deployed: {{ debian_config.stat.exists }}"