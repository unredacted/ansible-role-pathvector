---
# tasks file for ansible-role-pathvector
# Main task file - detects system type and includes appropriate tasks

# System Detection
- name: Check if /data directory exists
  ansible.builtin.stat:
    path: /data
  register: data_dir_check

- name: Check for UniFi directories in /data
  ansible.builtin.find:
    paths: /data
    patterns: "unifi*"
    file_type: directory
  register: unifi_dirs
  when: data_dir_check.stat.exists
  failed_when: false

- name: Set UniFi system fact
  ansible.builtin.set_fact:
    is_unifi_system: "{{ data_dir_check.stat.exists and unifi_dirs.matched | default(0) > 0 }}"

- name: Display system detection result
  ansible.builtin.debug:
    msg:
      - "System type detection:"
      - "  UniFi system: {{ is_unifi_system }}"
      - "  /data exists: {{ data_dir_check.stat.exists }}"
      - "  UniFi dirs found: {{ unifi_dirs.matched | default(0) }}"
  when: pathvector_debug | bool

# Find configuration files (common for both systems)
- name: Include common configuration tasks
  ansible.builtin.include_tasks: common.yml

# System-specific deployment
- name: Deploy to UniFi system
  ansible.builtin.include_tasks: unifi.yml
  when: is_unifi_system | bool

- name: Deploy to standard Debian system
  ansible.builtin.include_tasks: debian.yml
  when:
    - not is_unifi_system | bool
    - not pathvector_deploy_only

# Post-deployment tasks (if any)
- name: Display deployment summary
  ansible.builtin.debug:
    msg:
      - "Deployment completed for {{ inventory_hostname }}"
      - "System type: {{ 'UniFi' if is_unifi_system else 'Standard Debian' }}"
      - "Configuration deployed: {{ 'Yes' if config_file_found else 'No' }}"
  when: pathvector_debug | bool
