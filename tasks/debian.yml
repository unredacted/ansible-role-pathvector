---
# Tasks for standard Debian systems (non-UniFi)

- name: Debian deployment
  block:
    - name: Install prerequisite packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - wget
        state: present
        update_cache: yes

    - name: Install Bird from official CZ.NIC repository
      when: bird_install_from_official | default(true)
      block:
        - name: Add CZ.NIC Labs GPG key for Bird
          ansible.builtin.get_url:
            url: "{{ bird_gpg_key_url }}"
            dest: /usr/share/keyrings/cznic-labs-pkg.gpg
            mode: '0644'

        - name: Add Bird {{ bird_version }} APT repository
          ansible.builtin.apt_repository:
            repo: "deb [signed-by=/usr/share/keyrings/cznic-labs-pkg.gpg] https://pkg.labs.nic.cz/{{ bird_version }} {{ ansible_distribution_release }} main"
            state: present
            filename: "cznic-labs-{{ bird_version }}"
          register: bird_repo_result

        - name: Update APT cache after adding Bird repository
          ansible.builtin.apt:
            update_cache: yes
          when: bird_repo_result.changed

    - name: Install Pathvector repository key
      ansible.builtin.get_url:
        url: "{{ pathvector_pgp_key_url | default('https://repo.pathvector.io/pgp.asc') }}"
        dest: /usr/share/keyrings/pathvector.asc
        mode: '0644'
      register: repo_key_result
      when: not (pathvector_skip_install | default(false))

    # - name: Add Pathvector APT repository
    #   ansible.builtin.apt_repository:
    #     repo: "{{ pathvector_repo }}"
    #     state: present
    #     filename: pathvector
    #   register: repo_add_result
    #   when: not (pathvector_skip_install | default(false))

    - name: Update APT cache after adding repository
      ansible.builtin.apt:
        update_cache: yes
      when:
        - repo_add_result.changed | default(false)
        - not (pathvector_skip_install | default(false))
      tags:
        - skip_ansible_lint

    - name: Install Bird and Pathvector packages
      ansible.builtin.apt:
        name:
          - "{{ bird_version }}"
          - pathvector
        state: present
        update_cache: yes
      register: install_result
      when: not (pathvector_skip_install | default(false))

    - name: Display installation result
      ansible.builtin.debug:
        msg: "Packages installed: {{ install_result.changed }}"
      when: pathvector_debug | bool

    - name: Ensure Bird service is started and enabled
      ansible.builtin.systemd:
        name: bird
        state: started
        enabled: yes
        daemon_reload: yes
      register: bird_service_result
      when: not (pathvector_skip_install | default(false))

    - name: Check Bird service status
      ansible.builtin.systemd:
        name: bird
        state: started
      register: bird_status
      failed_when: false
      when: not (pathvector_skip_install | default(false))

    - name: Display Bird service status
      ansible.builtin.debug:
        msg:
          - "Bird version: {{ bird_version }}"
          - "Bird service active: {{ bird_status.status.ActiveState | default('unknown') }}"
      when: pathvector_debug | bool

  rescue:
    - name: Display installation error
      ansible.builtin.debug:
        msg: "Error during Debian package installation. Check logs for details."
      failed_when: true

# Configuration deployment for Debian
- name: Deploy Pathvector configuration
  when: config_file_found | bool
  block:
    - name: Copy Pathvector configuration file
      ansible.builtin.copy:
        src: "{{ pathvector_config_file }}"
        dest: "{{ pathvector_config_path }}"
        owner: root
        group: root
        mode: '0644'
        backup: yes
      register: config_copy_result
      notify: regenerate pathvector

    - name: Display configuration deployment result
      ansible.builtin.debug:
        msg:
          - "Configuration deployed: {{ config_copy_result.changed }}"
          - "Destination: {{ pathvector_config_path }}"
      when: pathvector_debug | bool

    - name: Generate Pathvector configuration
      ansible.builtin.command: pathvector generate
      register: generate_result
      changed_when: generate_result.rc == 0
      notify: reload bird
      when: not (pathvector_skip_install | default(false))

    - name: Display Pathvector generate output
      ansible.builtin.debug:
        var: generate_result.stdout_lines
      when:
        - pathvector_debug | bool
        - generate_result.stdout_lines is defined

    - name: Validate Bird configuration
      ansible.builtin.command: bird -p
      register: bird_validate
      changed_when: false
      failed_when: false
      when: not (pathvector_skip_install | default(false))

    - name: Display Bird validation result
      ansible.builtin.debug:
        msg: "Bird configuration {{ 'valid' if bird_validate.rc == 0 else 'invalid' }}"
      when:
        - pathvector_debug | bool
        - bird_validate is defined
        - bird_validate.rc is defined

# Optional: Display final status
- name: Debian deployment summary
  ansible.builtin.debug:
    msg:
      - "=== Debian Deployment Summary ==="
      - "Distribution: {{ ansible_distribution }} {{ ansible_distribution_release }}"
      - "Bird version: {{ bird_version }}"
      - "Packages installed: {{ bird_version }}, pathvector"
      - "Configuration deployed: {{ 'Yes' if config_copy_result.changed else 'No changes' }}"
      - "Bird service: {{ bird_status.status.ActiveState | default('unknown') }}"
  when: pathvector_debug | bool
