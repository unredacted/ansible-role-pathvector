---
name: CI

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop
  schedule:
    # Run tests weekly to catch issues with dependencies
    - cron: '0 0 * * 0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint yamllint

      - name: Lint YAML files
        run: yamllint .

      - name: Lint Ansible files
        run: ansible-lint

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - debian11
          - debian12
          - ubuntu2004
          - ubuntu2204

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible molecule molecule-plugins[docker] docker

      - name: Run Molecule tests
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  galaxy:
    name: Galaxy Import
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install ansible
        run: pip install ansible

      - name: Trigger Galaxy import
        run: |
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} \
            $(echo ${{ github.repository }} | cut -d/ -f1) \
            $(echo ${{ github.repository }} | cut -d/ -f2)
